// Generated by CoffeeScript 1.3.3
(function() {
  var CoffeeLinter, formatError, linter, util;

  linter = require('coffeelint');

  util = require('util');

  formatError = function(error) {
    var evidence, msg;
    evidence = (error.rule ? "\n\n" + error.rule + "\n" : "\n");
    return msg = "" + error.level + ": " + error.rule + " at line " + error.lineNumber + "." + (error.context || '');
  };

  module.exports = CoffeeLinter = (function() {

    CoffeeLinter.prototype.brunchPlugin = true;

    CoffeeLinter.prototype.type = 'javascript';

    CoffeeLinter.prototype.extension = 'coffee';

    function CoffeeLinter(config) {
      var cfg, _ref, _ref1, _ref2;
      this.config = config;
      cfg = (_ref = (_ref1 = this.config) != null ? _ref1.coffeelint : void 0) != null ? _ref : {};
      this.options = cfg.options;
      this.globals = cfg.globals;
      this.pattern = (_ref2 = cfg.pattern) != null ? _ref2 : RegExp("^" + this.config.paths.app + ".*\\.coffee$");
    }

    CoffeeLinter.prototype.lint = function(data, path, callback) {
      var error;
      error = (function() {
        try {
          return (linter.lint(data, this.options, this.globals)).filter(function(error) {
            return error != null;
          }).map(formatError).join('\n');
        } catch (err) {
          return err;
        }
      }).call(this);
      if (error) {
        return callback(error);
      } else {
        return callback();
      }
    };

    return CoffeeLinter;

  })();

}).call(this);
